server:
  port: 2001

spring:
  application:
    name: seata-order-service
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.137.110:3333,192.168.137.110:4444,192.168.137.110:5555
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.137.110:3306/seata_order?useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root

seata:
  enabled: true
  enable-auto-data-source-proxy: true #是否开启数据源自动代理,默认为true
  tx-service-group: my_test_tx_group  #要与配置文件中的vgroupMapping一致
  registry:  #registry根据seata服务端的registry配置
    type: Nacos #默认为file
    nacos:
      application: seata-server #配置自己的seata服务
      server-addr: 192.168.137.110:3333,192.168.137.110:4444,192.168.137.110:5555
      username: nacos
      password: nacos
      namespace: "34ebbd28-87c2-4e08-8295-d5873d10f079"
      cluster: default # 配置自己的seata服务cluster, 默认为 default
      group: SEATA_GROUP
  config:
    type: Nacos #默认file,如果使用file不配置下面的nacos,直接配置seata.service
    nacos:
      server-addr: 192.168.137.110:3333,192.168.137.110:4444,192.168.137.110:5555
      group: SEATA_GROUP
      username: nacos
      password: nacos
      namespace: "34ebbd28-87c2-4e08-8295-d5873d10f079"
      dataId: seataServer.properties #配置自己的dataId,由于搭建服务端时把客户端的配置也写在了seataServer.properties,所以这里用了和服务端一样的配置文件,实际客户端和服务端的配置文件分离出来更好

feign:
  hystrix:
    enabled: false

logging:
  level:
    io:
      seata: info

management:
  endpoints:
    web:
      exposure:
        include: '*'